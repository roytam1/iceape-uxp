<?xml version="1.0"?>
<!--
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Download Manager UI Test Code.
 *
 * The Initial Developer of the Original Code is
 * Edward Lee <edward.lee@engineering.uiuc.edu>.
 * Portions created by the Initial Developer are Copyright (C) 2008
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/**
 * Test bug 397935 to make sure the download manager ui window stays open when
 * it's opened by the user clicking the alert and has the close-when-done pref
 * set.
 */
-->

<window title="Download Manager Test"
        xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
        onload="test();">

  <script type="application/javascript"
          src="chrome://mochikit/content/MochiKit/packed.js"/>
  <script type="application/javascript"
          src="chrome://mochikit/content/tests/SimpleTest/SimpleTest.js"/>

  <script type="application/javascript">
  <![CDATA[
Components.utils.import("resource://gre/modules/Services.jsm");

function test()
{
  var dm = Components.classes["@mozilla.org/download-manager;1"]
                     .getService(Components.interfaces.nsIDownloadManager);

  // Empty any old downloads
  dm.DBConnection.executeSimpleSQL("DELETE FROM moz_downloads");

  var setClose = aVal =>
    Services.prefs.setBoolPref("browser.download.manager.closeWhenDone", aVal);

  // Close the UI if necessary
  var wm = Components.classes["@mozilla.org/appshell/window-mediator;1"]
                     .getService(Components.interfaces.nsIWindowMediator);
  var win = wm.getMostRecentWindow("Download:Manager");
  if (win) win.close();

  var os = Components.classes["@mozilla.org/observer-service;1"]
                     .getService(Components.interfaces.nsIObserverService);
  const DLMGR_UI_DONE = "download-manager-ui-done";

  var testObs = {
    observe: function(aSubject, aTopic, aData)
    {
      if (aTopic != DLMGR_UI_DONE)
        return;

      var win = aSubject;

      // Note:  This test will not be valid if the download list is built
      //        synchronously in Startup in downloads.js
      // Make sure the window stays open
      var dmui = Components.classes["@mozilla.org/download-manager-ui;1"]
                           .getService(Components.interfaces.nsIDownloadManagerUI);
      ok(dmui.visible, "Download Manager stays open on alert click");

      win.close();
      setClose(false);
      os.removeObserver(testObs, DLMGR_UI_DONE);
      SimpleTest.finish();
    }
  };

  // Register with the observer service
  os.addObserver(testObs, DLMGR_UI_DONE, false);

  // Simulate an alert click with pref set to true
  setClose(true);
  dm.QueryInterface(Components.interfaces.nsIObserver)
    .observe(null, "alertclickcallback", null);

  SimpleTest.waitForExplicitFinish();
}

  ]]>
  </script>

  <body xmlns="http://www.w3.org/1999/xhtml">
    <p id="display"></p>
    <div id="content" style="display:none;"></div>
    <pre id="test"></pre>
  </body>
</window>
